package de.dc.fx.ui.model.fxml.template.treeviewer;

import de.dc.fx.ui.model.fxml.template.IGenerator;
import de.dc.fx.ui.model.fxui.FXTreeView;
import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class TreeViewSampleTemplate implements IGenerator<FXTreeView> {
  @Override
  public String gen(final FXTreeView data) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("package ");
    String _packagePath = data.getPackagePath();
    _builder.append(_packagePath);
    _builder.append(";");
    _builder.newLineIfNotEmpty();
    _builder.newLine();
    _builder.append("import java.util.*;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("import ");
    String _packagePath_1 = data.getPackagePath();
    _builder.append(_packagePath_1);
    _builder.append(".provider.*;");
    _builder.newLineIfNotEmpty();
    _builder.append("import ");
    String _packagePath_2 = data.getPackagePath();
    _builder.append(_packagePath_2);
    _builder.append(".viewer.*;");
    _builder.newLineIfNotEmpty();
    _builder.append("import javafx.application.Application;");
    _builder.newLine();
    _builder.append("import javafx.scene.Scene;");
    _builder.newLine();
    _builder.append("import javafx.scene.layout.StackPane;");
    _builder.newLine();
    _builder.append("import javafx.stage.Stage;");
    _builder.newLine();
    _builder.newLine();
    _builder.append("public class TreeViewSample extends Application {");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public static void main(String[] args) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("launch(args);");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("public void start(Stage primaryStage) {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("primaryStage.setTitle(\"Tree View Sample\");");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("TreeViewer<Element> tree = new TreeViewer<Element>();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tree.getStylesheets().add(getClass().getResource(\"/treeviewer/TreeViewer.css\").toExternalForm());");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tree.setContentProvider(new IContentProvider<Element>() {");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public boolean hasChildren(Element element) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return element.getChildren().size() > 0;");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public Element getParent(Element element) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return element.getParent();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public List<Element> getElements(Element inputElement) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return Arrays.asList(inputElement);");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("@Override");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("public List<Element> getChildren(Element parentElement) {");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("return parentElement.getChildren();");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("});");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Element root = new Element(null, \"Vater\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("Element sohn1 = new Element(root, \"Sohn1\");");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("sohn1.getChildren().add(new DaughterElement(root, \"Tochter1\"));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("sohn1.getChildren().add(new DaughterElement(root, \"Tochter2\"));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("root.getChildren().add(sohn1);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("root.getChildren().add(new Element(root, \"Sohn2\"));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("tree.setInput(root);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("StackPane r = new StackPane();");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("r.getChildren().add(tree);");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("primaryStage.setScene(new Scene(r, 300, 250));");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("primaryStage.show();");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
}
