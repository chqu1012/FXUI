/*
 * generated by Xtext 2.14.0
 */
package de.dc.fx.ui.model.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import de.dc.fx.ui.model.ide.contentassist.antlr.internal.InternalFXDslParser;
import de.dc.fx.ui.model.services.FXDslGrammarAccess;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;

public class FXDslParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(FXDslGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, FXDslGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEBooleanAccess().getAlternatives(), "rule__EBoolean__Alternatives");
			builder.put(grammarAccess.getEDoubleAccess().getAlternatives_4_0(), "rule__EDouble__Alternatives_4_0");
			builder.put(grammarAccess.getPosAccess().getAlternatives(), "rule__Pos__Alternatives");
			builder.put(grammarAccess.getFXTableViewAccess().getGroup(), "rule__FXTableView__Group__0");
			builder.put(grammarAccess.getFXTableViewAccess().getGroup_6(), "rule__FXTableView__Group_6__0");
			builder.put(grammarAccess.getFXTableViewAccess().getGroup_7(), "rule__FXTableView__Group_7__0");
			builder.put(grammarAccess.getFXTableViewAccess().getGroup_7_3(), "rule__FXTableView__Group_7_3__0");
			builder.put(grammarAccess.getFXTableViewAccess().getGroup_8(), "rule__FXTableView__Group_8__0");
			builder.put(grammarAccess.getFXColumnAccess().getGroup(), "rule__FXColumn__Group__0");
			builder.put(grammarAccess.getFXColumnAccess().getGroup_6(), "rule__FXColumn__Group_6__0");
			builder.put(grammarAccess.getFXColumnAccess().getGroup_7(), "rule__FXColumn__Group_7__0");
			builder.put(grammarAccess.getFXColumnAccess().getGroup_8(), "rule__FXColumn__Group_8__0");
			builder.put(grammarAccess.getFXModelAccess().getGroup(), "rule__FXModel__Group__0");
			builder.put(grammarAccess.getFXModelAccess().getGroup_4(), "rule__FXModel__Group_4__0");
			builder.put(grammarAccess.getFXModelAccess().getGroup_4_3(), "rule__FXModel__Group_4_3__0");
			builder.put(grammarAccess.getFXPropertyAccess().getGroup(), "rule__FXProperty__Group__0");
			builder.put(grammarAccess.getFXPropertyAccess().getGroup_4(), "rule__FXProperty__Group_4__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup(), "rule__EDouble__Group__0");
			builder.put(grammarAccess.getEDoubleAccess().getGroup_4(), "rule__EDouble__Group_4__0");
			builder.put(grammarAccess.getFXTableViewAccess().getHasFilterAssignment_1(), "rule__FXTableView__HasFilterAssignment_1");
			builder.put(grammarAccess.getFXTableViewAccess().getHasSorterAssignment_2(), "rule__FXTableView__HasSorterAssignment_2");
			builder.put(grammarAccess.getFXTableViewAccess().getNameAssignment_4(), "rule__FXTableView__NameAssignment_4");
			builder.put(grammarAccess.getFXTableViewAccess().getPackagePathAssignment_6_1(), "rule__FXTableView__PackagePathAssignment_6_1");
			builder.put(grammarAccess.getFXTableViewAccess().getFxColumnsAssignment_7_2(), "rule__FXTableView__FxColumnsAssignment_7_2");
			builder.put(grammarAccess.getFXTableViewAccess().getFxColumnsAssignment_7_3_1(), "rule__FXTableView__FxColumnsAssignment_7_3_1");
			builder.put(grammarAccess.getFXTableViewAccess().getFxEntityAssignment_8_1(), "rule__FXTableView__FxEntityAssignment_8_1");
			builder.put(grammarAccess.getFXColumnAccess().getEditableAssignment_1(), "rule__FXColumn__EditableAssignment_1");
			builder.put(grammarAccess.getFXColumnAccess().getUseCustomCellFactoryAssignment_2(), "rule__FXColumn__UseCustomCellFactoryAssignment_2");
			builder.put(grammarAccess.getFXColumnAccess().getNameAssignment_4(), "rule__FXColumn__NameAssignment_4");
			builder.put(grammarAccess.getFXColumnAccess().getWidthAssignment_6_1(), "rule__FXColumn__WidthAssignment_6_1");
			builder.put(grammarAccess.getFXColumnAccess().getAlignmentAssignment_7_1(), "rule__FXColumn__AlignmentAssignment_7_1");
			builder.put(grammarAccess.getFXColumnAccess().getAssociatedFXPropertyAssignment_8_1(), "rule__FXColumn__AssociatedFXPropertyAssignment_8_1");
			builder.put(grammarAccess.getFXModelAccess().getNameAssignment_2(), "rule__FXModel__NameAssignment_2");
			builder.put(grammarAccess.getFXModelAccess().getFxPropertiesAssignment_4_2(), "rule__FXModel__FxPropertiesAssignment_4_2");
			builder.put(grammarAccess.getFXModelAccess().getFxPropertiesAssignment_4_3_1(), "rule__FXModel__FxPropertiesAssignment_4_3_1");
			builder.put(grammarAccess.getFXPropertyAccess().getNameAssignment_2(), "rule__FXProperty__NameAssignment_2");
			builder.put(grammarAccess.getFXPropertyAccess().getTypeAssignment_4_1(), "rule__FXProperty__TypeAssignment_4_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private FXDslGrammarAccess grammarAccess;

	@Override
	protected InternalFXDslParser createParser() {
		InternalFXDslParser result = new InternalFXDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public FXDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(FXDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
